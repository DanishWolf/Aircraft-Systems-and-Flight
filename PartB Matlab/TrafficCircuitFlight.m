function [xpos, ypos, zpos] = TrafficCircuitFlight(GS, dt, tf)
%UNTITLED3 Summary of this function goes here
%   Detailed explanation goes here
t = 0:dt:tf-dt;
samples = length(t);
latlong = 1/111000; %to convert 1m to 1degree lat/long

x = [153.1304/latlong, zeros(1,samples-1)];
y= [-27.3814/latlong, zeros(1,samples-1)];
z = zeros(1,samples);

speed = [linspace(0, GS,(length(t)*5)/20) ...
        GS*ones(1,(length(t)*10)/20) ...
        linspace(GS, 0,(length(t)*5)/20)];

pitch = pi/180*[zeros(1,length(t)*2/20) ...
                9.25*linspace(0, 1, length(t)*3/20) ...
                ...
                zeros(1,(length(t)*10)/20) ...
                ...
                -9.25*linspace(1, 0, length(t)*3/20) ...
                zeros(1,length(t)*2/20)];

yaw = deg2rad(241) + ((pi/180)*[(0)*ones(1,(length(t)*5)/20)...
                       ...
                       (0)*ones(1,(length(t)*0.5)/20) ...
                       (180)*linspace(0, 1, (length(t)*2.25)/20) ...
                       (180)*ones(1,(length(t)*5)/20) ...
                       (-180)*linspace(1, 0, (length(t)*2.25)/20) ...
                       ...
                       (360)*ones(1,(length(t)*5)/20)]); 
       
for i = 2:samples
    x(i) = (x(i-1) + dt*speed(i-1)*cos(pitch(i-1))*cos(yaw(i-1)));
    y(i) = (y(i-1) + dt*speed(i-1)*cos(pitch(i-1))*sin(yaw(i-1)));
    z(i) = z(i-1) + dt*speed(i-1)*sin(pitch(i-1));
end

xpos = (x*latlong);
ypos = (y*latlong);
zpos = z;
end

